
//import javax.comm.*;

import com.fazecast.jSerialComm.SerialPort;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static jdk.nashorn.tools.ShellFunctions.input;



/**
 *
 * @author mohammed
 */


public class Test1 extends javax.swing.JFrame {

    /**
     * Creates new form Test1
     */
    public Test1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BUTTON_TEST_1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BUTTON_TEST_1.setBackground(new java.awt.Color(153, 0, 204));
        BUTTON_TEST_1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        BUTTON_TEST_1.setText("TRANSFER");
        BUTTON_TEST_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_TEST_1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addComponent(BUTTON_TEST_1)
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(BUTTON_TEST_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BUTTON_TEST_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_TEST_1ActionPerformed
      // DOWNLOAD & ERASE Datalog 
         
           byte[] buffer = null;
         /*   SerialPort serialPort = new SerialPort("COM5");
            String mesg="v";
            String dataStream;
            
        try {
            System.out.println("Port open" + serialPort.openPort()); // opens the port COM3
            serialPort.setParams(9600, 8, 1, 0); // Set the params like bondrate for COM3
            buffer = serialPort.readBytes(100); // Reads the no. of bytes sent by the board
             dataStream = new String(buffer); // to store the bytes in the form of strings
            System.out.println(dataStream); //  to display the bytes in "Output" 
            jLabel1.setText(dataStream); // to store bytes in form of text
            serialPort.writeBytes(mesg.getBytes());// send bytes to arduino
            System.out.println( serialPort.closePort());
        }
        catch (SerialPortException ex){
            System.out.println(ex);
        } 
        jLabel1.getText(); // to dispaly the bytes in the form of text
         
        */
        
      // DETECTING A SERIAL PORT COM3//    
    /*  SerialPort serialPort = new SerialPort("COM3");
        try {
            serialPort.openPort();
            serialPort.setParams(9600, 8, 1, 0);
            if(serialPort.getPortName().equals("COM3")){
            String s ="USB: CONNECTED";
            jLabel1.setText(s);}
            else {System.out.println("usb not connected");}
            serialPort.closePort();
            
        }
            
         catch (SerialPortException ex) {
            Logger.getLogger(Test1.class.getName()).log(Level.SEVERE, null, ex);
        } */
        
        
     //////////////////////////////////////////////////////////////////////
    // SerialPort userPort;
     SerialPort ports[] = SerialPort.getCommPorts();
     
     int i=1;
     System.out.println("COM Ports available are");
      for(SerialPort port : ports) //iterator to pass through port array
    {
        System.out.println(i++ + ": " + port.getSystemPortName()); //print windows com ports
    }
     
     
     
     
     
     
     /////////////////////////////////////////////////////////////////////// 
      // To detect how many ports are connected to the computer
    /*  String[] portNames = SerialPortList.getPortNames();
        for(int i = 0; i < portNames.length; i++){
            System.out.println(portNames[i]);
        } 
      */   
     
                 
           
          
      /* String sp ="";
         JFileChooser fc = new JFileChooser();
         fc.setCurrentDirectory(new java.io.File("C:\\Users\\mohammed\\Desktop"));
         fc.setDialogTitle("Vigil Safety Site");
         fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
         if(fc.showOpenDialog(jButton1)== JFileChooser.APPROVE_OPTION){
             File f = fc.getSelectedFile();
             sp= f.getName();
          try {
              Desktop.getDesktop().open(f);
          } catch (IOException ex) {
              Logger.getLogger(Test1.class.getName()).log(Level.SEVERE, null, ex);
          }
         
         } */
      
      
      
    }//GEN-LAST:event_BUTTON_TEST_1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test1().setVisible(true);
            }
        }); 
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BUTTON_TEST_1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}

